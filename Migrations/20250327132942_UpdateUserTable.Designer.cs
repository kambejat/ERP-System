// <auto-generated />
using System;
using Erp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Erp.Migrations
{
    [DbContext(typeof(ERPDbContext))]
    [Migration("20250327132942_UpdateUserTable")]
    partial class UpdateUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Erp.Models.Attendance", b =>
                {
                    b.Property<int>("attendance_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attendance_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("attendance_id"));

                    b.Property<DateTime?>("check_in")
                        .HasColumnType("datetime2")
                        .HasColumnName("check_in");

                    b.Property<DateTime?>("check_out")
                        .HasColumnType("datetime2")
                        .HasColumnName("check_out");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int>("employee_id")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("attendance_id");

                    b.HasIndex("employee_id");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Erp.Models.Employee", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("employee_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("department")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("department");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<DateTime>("hire_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("hire_date");

                    b.Property<string>("job_title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job_title");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<decimal?>("salary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("salary");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<int?>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("employee_id");

                    b.HasIndex("user_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Erp.Models.LeaveRequest", b =>
                {
                    b.Property<int>("leave_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("leave_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("leave_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("employee_id")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<string>("leave_type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("leave_type");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("leave_id");

                    b.HasIndex("employee_id");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("Erp.Models.Log", b =>
                {
                    b.Property<int>("log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("log_id"));

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("action");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("timestamp");

                    b.Property<int>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("log_id");

                    b.HasIndex("user_id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Erp.Models.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date");

                    b.Property<int>("status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("total_amount");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<int>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("order_id");

                    b.HasIndex("user_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Erp.Models.OrderItem", b =>
                {
                    b.Property<int>("order_item_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_item_id"));

                    b.Property<int>("order_id")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("product_id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("order_item_id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Erp.Models.Payroll", b =>
                {
                    b.Property<int>("payroll_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payroll_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payroll_id"));

                    b.Property<int>("employee_id")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<decimal>("gross_salary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("gross_salary");

                    b.Property<DateTime>("pay_period_end")
                        .HasColumnType("datetime2")
                        .HasColumnName("pay_period_end");

                    b.Property<DateTime>("pay_period_start")
                        .HasColumnType("datetime2")
                        .HasColumnName("pay_period_start");

                    b.Property<DateTime>("processed_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("processed_at");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<decimal>("tax")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tax");

                    b.HasKey("payroll_id");

                    b.HasIndex("employee_id");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("Erp.Models.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_id"));

                    b.Property<string>("category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("name_of_product")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name_of_product");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("quantity_in_stock")
                        .HasColumnType("int")
                        .HasColumnName("quantity_in_stock");

                    b.Property<int>("reorder_level")
                        .HasColumnType("int")
                        .HasColumnName("reorder_level");

                    b.Property<string>("sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sku");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("product_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Erp.Models.Setting", b =>
                {
                    b.Property<string>("setting_key")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("setting_key");

                    b.Property<string>("setting_value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("setting_value");

                    b.HasKey("setting_key");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Erp.Models.Supplier", b =>
                {
                    b.Property<int>("supplier_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplier_id"));

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("contact_person")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_person");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("name_of_supplier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name_of_supplier");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("supplier_id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Erp.Models.Transaction", b =>
                {
                    b.Property<int>("transaction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transaction_id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("order_id")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("payment_method")
                        .HasColumnType("int")
                        .HasColumnName("payment_method");

                    b.Property<int>("status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("transaction_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("transaction_date");

                    b.HasKey("transaction_id");

                    b.HasIndex("order_id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Erp.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Erp.Models.Attendance", b =>
                {
                    b.HasOne("Erp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Erp.Models.Employee", b =>
                {
                    b.HasOne("Erp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Erp.Models.LeaveRequest", b =>
                {
                    b.HasOne("Erp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Erp.Models.Log", b =>
                {
                    b.HasOne("Erp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Erp.Models.Order", b =>
                {
                    b.HasOne("Erp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Erp.Models.OrderItem", b =>
                {
                    b.HasOne("Erp.Models.Order", "Order")
                        .WithMany("order_items")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Erp.Models.Payroll", b =>
                {
                    b.HasOne("Erp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Erp.Models.Transaction", b =>
                {
                    b.HasOne("Erp.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Erp.Models.Order", b =>
                {
                    b.Navigation("order_items");
                });
#pragma warning restore 612, 618
        }
    }
}
